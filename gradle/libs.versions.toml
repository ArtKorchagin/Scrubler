[versions]
kotlin = "1.8.20"
androidGradlePlugin = "8.1.0"
buildconfig = "3.1.0"
compose = "1.4.1-rc01"
activity = "1.7.2"
sqlDelight = "2.0.0-alpha05"
mokoResources = "0.23.0"
appcompat = "1.6.1"
androidCore = "1.10.1"
kotlinCoroutines = "1.7.1"
kotlinDatetime = "0.4.0"
ktor = "2.3.1"
material = "1.9.0"
mviKotlin = "3.2.1"
decompose = "2.0.0-compose-experimental"
essenty = "1.1.0"
kamelImage = "0.6.0"
parcelizeDarwin = "0.1.4"
koin = "3.4.3"
koinCompose = "1.0.4"

[libraries]
android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "androidGradlePlugin" }

androidx-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "activity" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-coreKtx = { module = "androidx.core:core-ktx", version.ref = "androidCore" }

kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-coroutinesCore = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinCoroutines" }
kotlin-coroutinesSwing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinCoroutines" }
kotlin-coroutinesAndroid = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinCoroutines" }
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinDatetime" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }

ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-apache = { module = "io.ktor:ktor-client-apache", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-core-jvm = { module = "io.ktor:ktor-client-core-jvm", version.ref = "ktor" }
ktor-client-java = { module = "io.ktor:ktor-client-java", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
ktor-client-json = { module = "io.ktor:ktor-client-json", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-serialization-gson = { module = "io.ktor:ktor-serialization-gson", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-core-coroutines = { module = "io.insert-koin:koin-core-coroutines", version.ref = "koin" }
koin-ktor = { module = "io.insert-koin:koin-ktor", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koinCompose" }

#koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
#koin-android
#koin-android-compat

material = { module = "com.google.android.material:material", version.ref = "material" }

moko-resources = { module = "dev.icerock.moko:resources", version.ref = "mokoResources" }
moko-resources-compose = { module = "dev.icerock.moko:resources-compose", version.ref = "mokoResources" }

sqldelight-androidDriver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqldelight-jvmDriver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
sqldelight-webWorkerDriver = { module = "app.cash.sqldelight:web-worker-driver", version.ref = "sqlDelight" }
sqldelight-sqljsDriver = { module = "app.cash.sqldelight:sqljs-driver", version.ref = "sqlDelight" }
sqldelight-nativeDriver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
sqldelight-primitiveAdapters = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }

arkivanov-mvi-kotlin = { module = "com.arkivanov.mvikotlin:mvikotlin", version.ref = "mviKotlin" }
arkivanov-mvi-kotlinMain = { module = "com.arkivanov.mvikotlin:mvikotlin-main", version.ref = "mviKotlin" }
arkivanov-mvi-kotlinExtensionsCoroutines = { module = "com.arkivanov.mvikotlin:mvikotlin-extensions-coroutines", version.ref = "mviKotlin" }

arkivanov-decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
arkivanov-decompose-extensionsCompose = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "decompose" }
arkivanov-essenty-lifecycle = { module = "com.arkivanov.essenty:lifecycle", version.ref = "essenty" }
arkivanov-essenty-parcelable = { module = "com.arkivanov.essenty:parcelable", version.ref = "essenty" }
arkivanov-essenty-parcelable-darwin = { module = "com.arkivanov.parcelize.darwin:runtime", version.ref = "parcelizeDarwin" }
#arkivanov-essenty-backHandler = { module = "#com.arkivanov.essenty:back-handler", version.ref = "essenty" }

kamel = { module = "media.kamel:kamel-image", version.ref = "kamelImage" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "androidGradlePlugin" }
androidLibrary = { id = "com.android.library", version.ref = "androidGradlePlugin" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose" }
kotlin = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
mokoResources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "mokoResources" }
sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
parcelizeDarwin = { id = "com.arkivanov.parcelize.darwin", version.ref = "parcelizeDarwin" }
kotlinParcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
gmazzo-buildconfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildconfig" }